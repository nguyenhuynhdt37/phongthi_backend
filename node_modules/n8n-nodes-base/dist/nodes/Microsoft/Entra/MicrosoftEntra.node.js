"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MicrosoftEntra = void 0;
const descriptions_1 = require("./descriptions");
const GenericFunctions_1 = require("./GenericFunctions");
class MicrosoftEntra {
    constructor() {
        this.description = {
            displayName: 'Microsoft Entra ID',
            name: 'microsoftEntra',
            icon: {
                light: 'file:microsoftEntra.svg',
                dark: 'file:microsoftEntra.dark.svg',
            },
            group: ['transform'],
            version: 1,
            subtitle: '={{$parameter["operation"] + ": " + $parameter["resource"]}}',
            description: 'Interact with Micosoft Entra ID API',
            defaults: {
                name: 'Micosoft Entra ID',
            },
            usableAsTool: true,
            inputs: ["main"],
            outputs: ["main"],
            credentials: [
                {
                    name: 'microsoftEntraOAuth2Api',
                    required: true,
                },
            ],
            requestDefaults: {
                baseURL: 'https://graph.microsoft.com/v1.0',
                headers: {
                    'Content-Type': 'application/json',
                },
            },
            properties: [
                {
                    displayName: 'Resource',
                    name: 'resource',
                    type: 'options',
                    noDataExpression: true,
                    options: [
                        {
                            name: 'Group',
                            value: 'group',
                        },
                        {
                            name: 'User',
                            value: 'user',
                        },
                    ],
                    default: 'user',
                },
                ...descriptions_1.groupOperations,
                ...descriptions_1.groupFields,
                ...descriptions_1.userOperations,
                ...descriptions_1.userFields,
            ],
        };
        this.methods = {
            loadOptions: {
                getGroupProperties: GenericFunctions_1.getGroupProperties,
                async getGroupPropertiesGetAll() {
                    return (await GenericFunctions_1.getGroupProperties.call(this)).filter((x) => ![
                        'allowExternalSenders',
                        'autoSubscribeNewMembers',
                        'hideFromAddressLists',
                        'hideFromOutlookClients',
                        'isSubscribedByMail',
                        'unseenCount',
                    ].includes(x.value));
                },
                getUserProperties: GenericFunctions_1.getUserProperties,
                async getUserPropertiesGetAll() {
                    return (await GenericFunctions_1.getUserProperties.call(this)).filter((x) => ![
                        'aboutMe',
                        'birthday',
                        'hireDate',
                        'interests',
                        'mySite',
                        'pastProjects',
                        'preferredName',
                        'responsibilities',
                        'schools',
                        'skills',
                        'mailboxSettings',
                    ].includes(x.value));
                },
            },
            listSearch: {
                getGroups: GenericFunctions_1.getGroups,
                getUsers: GenericFunctions_1.getUsers,
            },
        };
    }
}
exports.MicrosoftEntra = MicrosoftEntra;
//# sourceMappingURL=MicrosoftEntra.node.js.map