"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.pineconeIndexSearch = pineconeIndexSearch;
exports.supabaseTableNameSearch = supabaseTableNameSearch;
exports.qdrantCollectionsSearch = qdrantCollectionsSearch;
const pinecone_1 = require("@pinecone-database/pinecone");
const js_client_rest_1 = require("@qdrant/js-client-rest");
const n8n_workflow_1 = require("n8n-workflow");
async function pineconeIndexSearch() {
    const credentials = await this.getCredentials('pineconeApi');
    const client = new pinecone_1.Pinecone({
        apiKey: credentials.apiKey,
    });
    const indexes = await client.listIndexes();
    const results = (indexes.indexes ?? []).map((index) => ({
        name: index.name,
        value: index.name,
    }));
    return { results };
}
async function supabaseTableNameSearch() {
    const credentials = await this.getCredentials('supabaseApi');
    const results = [];
    if (typeof credentials.host !== 'string') {
        throw new n8n_workflow_1.ApplicationError('Expected Supabase credentials host to be a string');
    }
    const { paths } = (await this.helpers.requestWithAuthentication.call(this, 'supabaseApi', {
        headers: {
            Prefer: 'return=representation',
        },
        method: 'GET',
        uri: `${credentials.host}/rest/v1/`,
        json: true,
    }));
    for (const path of Object.keys(paths)) {
        if (path === '/')
            continue;
        results.push({
            name: path.replace('/', ''),
            value: path.replace('/', ''),
        });
    }
    return { results };
}
async function qdrantCollectionsSearch() {
    const credentials = await this.getCredentials('qdrantApi');
    const client = new js_client_rest_1.QdrantClient({
        url: credentials.qdrantUrl,
        apiKey: credentials.apiKey,
    });
    const response = await client.getCollections();
    const results = response.collections.map((collection) => ({
        name: collection.name,
        value: collection.name,
    }));
    return { results };
}
//# sourceMappingURL=listSearch.js.map